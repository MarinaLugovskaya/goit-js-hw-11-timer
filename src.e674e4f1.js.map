{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","selector","targetDate","timerId","start","getRefs","days","document","querySelector","hours","mins","secs","pad","value","String","padStart","setInterval","time","Date","now","textContent","Math","floor","countdownTimer"],"mappings":";;;AAoHA,aApHA,QAAA,oBAEA,MAAMA,EACFC,aAAY,SAAEC,EAAF,WAAYC,IACjBC,KAAAA,QAAU,KACVF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAEbE,KAAAA,QAIPC,UACS,MAAA,CACLC,KAAMC,SAASC,iBACV,KAAKP,gCAEVQ,MAAOF,SAASC,iBACX,KAAKP,iCAEVS,KAAMH,SAASC,iBACV,KAAKP,gCAEVU,KAAMJ,SAASC,iBAAiB,KAAKP,iCAIzCW,IAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAInCX,QACOD,KAAAA,QAAUa,YAAY,KACnBC,MAAAA,EAAO,KAAKf,WAAagB,KAAKC,OAC9B,KAAEb,EAAF,MAAQG,EAAR,KAAeC,EAAf,KAAqBC,GAAS,KAAKN,UAEzCC,EAAKc,YAAc,KAAKR,IAAIS,KAAKC,MAAML,EAAQ,QAE/CR,EAAMW,YAAc,KAAKR,IAAIS,KAAKC,MAC/BL,EAAQ,MAAyB,OAGpCP,EAAKU,YAAc,KAAKR,IAAIS,KAAKC,MAC9BL,EAAQ,KAAoB,MAG/BN,EAAKS,YAAc,KAAKR,IAAIS,KAAKC,MAAOL,EAAQ,IAAc,OAC7D,MAOP,MAAMM,EAAiB,IAAIxB,EAAe,CACxCE,SAAU,WACVC,WAAY,IAAIgB,KAAK","file":"src.e674e4f1.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n    constructor({ selector, targetDate }) {\n      this.timerId = null;\n      this.selector = selector;\n      this.targetDate = targetDate;\n  \n      this.start()\n        \n    };\n  \n    getRefs() {\n      return {\n        days: document.querySelector(\n          `${this.selector} [data-value=\"days\"]`,\n        ),\n        hours: document.querySelector(\n          `${this.selector} [data-value=\"hours\"]`,\n        ),\n        mins: document.querySelector(\n          `${this.selector} [data-value=\"mins\"]`,\n        ),\n        secs: document.querySelector(`${this.selector} [data-value=\"secs\"]`),\n      };\n    };\n  \n    pad(value) {\n      return String(value).padStart(2, '0');\n    };\n  \n  \n    start() {\n      this.timerId = setInterval(() => {\n        const time = this.targetDate - Date.now();\n        const { days, hours, mins, secs } = this.getRefs();\n  \n        days.textContent = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  \n        hours.textContent = this.pad(Math.floor(\n          (time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\n        ));\n  \n        mins.textContent = this.pad(Math.floor(\n          (time % (1000 * 60 * 60)) / (1000 * 60),\n        ));\n        \n        secs.textContent = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n      }, 1000);\n    }\n  };\n  \n    \n  \n  // Экземпляр\n  const countdownTimer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2022'),\n  \n  });\n\n\n// const refs = {\n//   days: document.querySelector('[data-value=\"days\"]'),\n//   hours: document.querySelector('[data-value=\"hours\"]'),\n//   mins: document.querySelector('[data-value=\"mins\"]'),\n//   secs: document.querySelector('[data-value=\"secs\"]'),\n// }\n\n// class CountdownTimer {\n//   constructor({ selector, targetDate }) {\n//     this.selector = selector;\n//     this.targetDate = targetDate;\n//     this.timerId = null;\n//   }\n\n//   start() {\n//         const startTime = Date.now();\n\n//         this.intervalId = setInterval(() => {\n//           const currentTime = Date.now();\n//           const deltaTime = this.targetDate - Date.now();\n//           const time = this.getTimeComponents(deltaTime);\n//         },1000);\n//   }\n//   getTimeComponents(time) {\n//     const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n//     const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n//     const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//     const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  \n//     return {days, hours, mins, secs};\n//   }\n\n//   pad(value) {\n//     return String(value).padStart(2, '0');\n//   }\n// }\n\n//   const timer = new CountdownTimer({\n//     selector: '#timer-1',\n//     targetDate: new Date('Jul 17, 2019'),\n//   });\n\n  \n//   function updateClockFace({days, hours, mins, secs}) {\n//     refs.days.textContent = `${days}`;\n//     refs.hours.textContent = `${hours}`;\n//     refs.mins.textContent = `${mins}`;\n//     refs.secs.textContent = `${secs}`;\n//   }\n\n//   function countdownTimer() {\n//     if (deltaTime  <= 0) {\n//       clearInterval(timerId);\n//     }\n//   }"]}