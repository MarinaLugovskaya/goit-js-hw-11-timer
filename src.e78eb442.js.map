{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","constructor","selector","targetDate","timerId","start","Date","now","intervalId","setInterval","currentTime","deltaTime","getTimeComponents","time","pad","Math","floor","value","String","padStart","timer","updateClockFace","textContent","countdownTimer","clearInterval"],"mappings":";;;AAwDG,aAxDH,QAAA,oBAEA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAG/B,MAAMI,EACJC,aAAY,SAAEC,EAAF,WAAYC,IACjBD,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EACbC,KAAAA,QAAU,KAGjBC,QACwBC,KAAKC,MAElBC,KAAAA,WAAaC,YAAY,KACRH,KAAKC,MAAnBG,MACAC,EAAY,KAAKR,WAAaG,KAAKC,MAC5B,KAAKK,kBAAkBD,IACpC,KAERC,kBAAkBC,GAMT,MAAA,CAACnB,KALKoB,IAAIC,KAAKC,MAAMH,EAAQ,QAKtBhB,MAJAiB,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAI1Cf,KAHRgB,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAG9Bd,KAFde,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,OAKrDC,IAAIG,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,MAInC,MAAMC,EAAQ,IAAIpB,EAAe,CAC/BE,SAAU,WACVC,WAAY,IAAIG,KAAK,kBAIvB,SAASe,GAAgB,KAAC3B,EAAD,MAAOG,EAAP,KAAcC,EAAd,KAAoBC,IAC3CN,EAAKC,KAAK4B,eAAiB5B,IAC3BD,EAAKI,MAAMyB,eAAiBzB,IAC5BJ,EAAKK,KAAKwB,eAAiBxB,IAC3BL,EAAKM,KAAKuB,eAAiBvB,IAG7B,SAASwB,IACHZ,WAAc,GAChBa,cAAcpB","file":"src.e78eb442.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n  days: document.querySelector('[data-value=\"days\"]'),\n  hours: document.querySelector('[data-value=\"hours\"]'),\n  mins: document.querySelector('[data-value=\"mins\"]'),\n  secs: document.querySelector('[data-value=\"secs\"]'),\n}\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.timerId = null;\n  }\n\n  start() {\n        const startTime = Date.now();\n\n        this.intervalId = setInterval(() => {\n          const currentTime = Date.now();\n          const deltaTime = this.targetDate - Date.now();\n          const time = this.getTimeComponents(deltaTime);\n        },1000);\n  }\n  getTimeComponents(time) {\n    const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n  \n    return {days, hours, mins, secs};\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\n  const timer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Jul 17, 2019'),\n  });\n\n  \n  function updateClockFace({days, hours, mins, secs}) {\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${mins}`;\n    refs.secs.textContent = `${secs}`;\n  }\n\n  function countdownTimer() {\n    if (deltaTime  <= 0) {\n      clearInterval(timerId);\n    }\n  }"]}